import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;

import javax.swing.JTabbedPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author maria
 */
public class DashboardPanel extends javax.swing.JPanel {
	
	String data[][] = new String[50][14];
	
	JTabbedPane parentTabs = new JTabbedPane();
	public int loggedInUserLocal = 0;
	
	 public int getLoggedInUserLocal() {
		return loggedInUserLocal;
	}



	public void setLoggedInUserLocal(int loggedInUserLocal) {
		this.loggedInUserLocal = loggedInUserLocal;
	}

    /**
     * Creates new form DashboardPanel02
     */
    public DashboardPanel (JTabbedPane tabs , int loggedInUser) {
    	 initComponents(tabs);
         loggedInUserLocal = loggedInUser;
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
  private void initComponents(JTabbedPane tabs) {
    	
    	parentTabs = tabs;

        NewScheduleButton = new javax.swing.JButton();
        
        deleteScheduleButton = new javax.swing.JButton();
        
        DateLabel = new javax.swing.JLabel();
        UserFirstNameLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        DashboardTable1 = new javax.swing.JTable();

        setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        

        NewScheduleButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        NewScheduleButton.setText("+");
       
        NewScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewScheduleButtonActionPerformed(evt);
            }
        });
        
        
        deleteScheduleButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        deleteScheduleButton.setText("-");
       
        deleteScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteScheduleButtonActionPerformed(evt);
            }
        });
        
        

        DateLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        DateLabel.setText("Date : " + Calendar.getInstance().getTime());

        UserFirstNameLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        UserFirstNameLabel1.setText("User Name / Email :");
        
        
        String columns[] = { "ID", "Activity Date", "School Hrs", "School Mins" , "Work Hrs","Work Mins",
        		"Sleep Hrs",	"Sleep Mins", "Exercise Hrs",	"Exercise Mins",	 "Eat Hrs",	"Eat Mins", "Other Hrs",	"Other Mins" };
        //data[][] = new String[50][14];
        
        
        DashboardTable1.setModel(new javax.swing.table.DefaultTableModel(data, columns));
        
        DashboardTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DashboardTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(DashboardTable1);

        jScrollPane1.setViewportView(jScrollPane2);

       
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 934, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateLabel))
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UserFirstNameLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NewScheduleButton)
                        .addGap(120, 120, 120))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(940, Short.MAX_VALUE)
                    .addComponent(deleteScheduleButton)
                    .addGap(45, 45, 45)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(UserFirstNameLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(NewScheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(DateLabel)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(43, 43, 43)
                    .addComponent(deleteScheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(640, Short.MAX_VALUE)))
        );
        
    }// </editor-fold>   
    
    
    public void fillTableData() {
    	
        String columns[] = { "ID", "Activity Date", "School Hrs", "School Mins" , "Work Hrs","Work Mins",
        		"Sleep Hrs",	"Sleep Mins", "Exercise Hrs",	"Exercise Mins",	 "Eat Hrs",	"Eat Mins", "Other Hrs",	"Other Mins" };
        //data[][] = new String[50][14];
        
        
        // get dat from DB
        
        
        DatabaseUtilities du = new DatabaseUtilities();
    	Connection connection = null;
    	ResultSet rs = null;
    	
    	loggedInUserLocal = TimeTracker.loggedInUserId;
    	
    	try
	    {
        	connection = du.getDBConnection();
        	
        	String userQuery = "SELECT * FROM timetracker.user_activities where user_ID = " + loggedInUserLocal ;
        	
        	rs = du.getData(userQuery, connection);
        	
           int recordID = 0;
        	
           int schoolhrs = 0;
      	   int schoolmins = 0;
      	   
      	   int workhrs = 0;
      	   int workmins = 0;
      	   
      	   int sleephrs = 0;
      	   int sleepmins = 0;
      	   
      	   int exercisehrs = 0;
      	   int exercisemins = 0;
      	   
      	   int eatinghrs = 0;
      	   int eatingmins = 0;
      	   
      	   int otherhrs = 0;
      	   int othermins = 0;
        	
        	int userId = 0 ;
        	
        	Date activityDate = Calendar.getInstance().getTime();
        	
        	
        	int i=0;
        	while( rs.next() )
    	    {
        		
        		recordID = rs.getInt("ID");
        		
        	  activityDate = rs.getDate("activity_date");

       		  schoolhrs = rs.getInt("school_hrs");
        	  schoolmins = rs.getInt("school_mins");
        		   
        	  workhrs = rs.getInt("work_hrs");
        	  workmins = rs.getInt("work_mins");
        		   
        	  sleephrs = rs.getInt("sleep_hrs");
        	  sleepmins = rs.getInt("sleep_mins");
        		   
        	  exercisehrs = rs.getInt("exercise_hrs");
        	  exercisemins = rs.getInt("exercise_mins");
        		   
        	  eatinghrs = rs.getInt("eating_hrs");
        	  eatingmins = rs.getInt("eating_mins");
        		   
        	  otherhrs = rs.getInt("other_hrs");
        	  othermins = rs.getInt("other_mins");
        	  
        	  //String columns[] = { "ID", "Activity Date", "School Hrs", "School Mins" , "Work Hrs","Work Mins", "Sleep Hrs",	"Sleep Mins", "Exercise Hrs",	"Exercise Mins",	 "Eat Hrs",	"Eat Mins", "Other Hrs",	"Other Mins" };
        		
        	  data[i][0] = recordID + "";
              data[i][1] = activityDate + "";
              
              data[i][2] = schoolhrs + "";
              data[i][3] = schoolmins + "";
              
              data[i][4] = workhrs + "";
              data[i][5] = workmins + "";
              
              data[i][6] = sleephrs + "";
              data[i][7] = sleepmins + "";
              
              data[i][8] = exercisehrs + "";
              data[i][9] = exercisemins + "";
              
              data[i][10] = eatinghrs + "";
              data[i][11] = eatingmins + "";
              
              data[i][12] = otherhrs + "";
              data[i][13] = othermins + "";
              
              
              
              i++;	
        		
        		
    	    }
    	    // Close the result set, statement and the connection
    	    rs.close() ;
    	    connection.close();
    	    
    	    
    	    
	    }catch( SQLException se )
 	    {
		       System.out.println( "SQL Exception:" ) ;

		       // Loop through the SQL Exceptions
		       while( se != null )
		       {
		          System.out.println( "State  : " + se.getSQLState()  ) ;
		          System.out.println( "Message: " + se.getMessage()   ) ;
		          System.out.println( "Error  : " + se.getErrorCode() ) ;

		          se = se.getNextException() ;
		       }
		}
		catch( Exception e )
		{
		   System.out.println( e ) ;
		}
        
        


        DashboardTable1.setModel(new javax.swing.table.DefaultTableModel(data, columns));
    	
    }
    

    private void NewScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    	
    	System.out.println( "Add new schedule here --- goto add activity page" ) ;
    } 
    
    
    private void deleteScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    	
    	System.out.println( "delete selected schedule here --- write delete query based on selected schedule id" ) ;
    } 
                                             

    private void DashboardTable1MouseClicked(java.awt.event.MouseEvent evt) {                                             
        // TODO add your handling code here:
    	
    	int rowIndex = 0;
        int colIndex = 0;
        final String dataIDToDelete = "";
    	
       
       
      //For the purposes of this example, better to have a single
        //selection.
        DashboardTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        //When selection changes, provide user with row numbers for
        //both view and model.
        DashboardTable1.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent event) {
                        int viewRow = DashboardTable1.getSelectedRow();
                        if (viewRow < 0) {
                            //Selection got filtered away.
                            //statusText.setText("");
                        } else {
                            int modelRow = 
                            		DashboardTable1.convertRowIndexToModel(viewRow);
                            
                            //System.out.println( "viewRow  " + viewRow) ;
                        	//System.out.println( "modelRow " + modelRow) ;
                        	
                        	System.out.println( "Data of activity id to delete " + data[viewRow][0]) ;
                        	//dataIDToDelete = data[viewRow][0];
                        	
                        	
                           
                        }
                    }
                }
        );
        
        //System.out.println( "Data of activity id to delete " + dataIDToDelete) ;

    } 
    
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {                                    
        // TODO add your handling code here:
    	
    	System.out.println( "Component shown" ) ;
    	
    	UserFirstNameLabel1.setText("User Name / Email  :  " + TimeTracker.getUserEmail());
    	
    	
    	fillTableData();
    }    
    
    


    // Variables declaration - do not modify                     
    private javax.swing.JTable DashboardTable1;
    private javax.swing.JLabel DateLabel;
    
    private javax.swing.JButton NewScheduleButton;
    private javax.swing.JButton deleteScheduleButton;
    
    private javax.swing.JLabel UserFirstNameLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration                   
}
